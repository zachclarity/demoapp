{"version":3,"sources":["apiUtils/webRequest.ts","apiUtils/WaitForRequests.ts","pages/PersonForm.tsx","pages/Home.tsx","pages/Signin.tsx","AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultHeaders","cookie","load","demoURL","instance","axios","create","timeout","headers","getData","endpoint","console","log","get","catch","err","request","postData","data","post","JSON","stringify","performPost","putData","performPut","doDelete","performDelete","waitForGetData","a","then","result","waitForPostData","bodyData","deleteData","require","Wit","client","accessToken","logger","Logger","DEBUG","Input","React","forwardRef","props","ref","Select","options","id","map","label","value","Form","onSubmit","children","methods","useForm","handleSubmit","meaning","utterance","message","response","intents","name","alert","error","PersonForm","demoData","choose1","waitForPutData","waitForDeleteData","lastName","errors","register","required","minLength","firstName","type","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Home","Grid","container","item","xs","Component","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","onClick","history","push","Box","mt","AppRouter","exact","path","render","App","Boolean","window","location","hostname","match","MyContext","createContext","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96e38182.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport cookie from \"react-cookies\";\n\nconst defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Credentials\": \"true\",\n    \"X-XSRF-TOKEN\": cookie.load(\"XSRF-TOKEN\")\n};\n\nconst demoURL = 'http://localhost:3001';\n\nconst instance = axios.create({\n    timeout: 1000,\n    headers: {defaultHeaders}\n});\n\nconst performPut = (endpoint: string, data: any): Promise<AxiosResponse> => {\n    return instance\n        .post(demoURL + `/${endpoint}`, JSON.stringify(data))\n        .catch(err => err.request);\n};\n\nconst performDelete = (endpoint: string, data: any): Promise<AxiosResponse> => {\n    return instance\n        .post(demoURL + `/${endpoint}`, JSON.stringify(data))\n        .catch(err => err.request);\n};\n\nconst performGet = (endpoint: string): Promise<AxiosResponse> => {\n    console.log(\"URL: \" + endpoint);\n    return instance.get(demoURL + `/${endpoint}`).catch(err => err.request);\n};\n\nconst performPost = (endpoint: string, data: any): Promise<AxiosResponse> => {\n    return instance\n        .post(demoURL + `/${endpoint}`, JSON.stringify(data))\n        .catch(err => err.request);\n};\n\nexport const getData = (): Promise<AxiosResponse> => {\n    return   performGet( \"/getData\");\n}\n\nexport const postData = (data: string): Promise<AxiosResponse> => {\n    return   performPost(\"/postData\", data);\n}\n\nexport const putData = ( data: string): Promise<AxiosResponse> => {\n    return   performPut( \"/putData\", data);\n}\n\nexport const doDelete = (data: string): Promise<AxiosResponse> => {\n    return   performDelete( \"/deleteData\", data);\n}\n","import {doDelete, getData, putData, postData} from \"./webRequest\";\n\nexport const waitForGetData = async () => {\n    try {\n        await getData().then(data => {\n            const result = JSON.stringify(data.data);\n            console.log(result);\n            return result;\n        });\n    } catch (err) {\n        console.log('fetch failed', err);\n        return \"{error: 'err'}\";\n    }\n}\n\nexport const waitForPostData = async (bodyData: string) => {\n    try {\n        await postData(bodyData).then((data: any) => {\n            const result = JSON.stringify(data);\n            console.log(result);\n            return result;\n        });\n    } catch (err) {\n        console.log('request failed', err);\n        return \"{error: 'err'}\";\n    }\n}\n\n\nexport async function waitForPutData(bodyData: string) {\n    try {\n        await putData(bodyData).then(data => {\n            const result = JSON.stringify(data.data);\n            console.log(result);\n            return result;\n        });\n    } catch (err) {\n        console.log('fetch failed', err);\n        return \"{error: 'err'}\";\n    }\n}\n\nexport async function waitForDeleteData(deleteData: string) {\n    try {\n        await doDelete(deleteData).then(data => {\n            const result = JSON.stringify(data.data);\n            console.log(result);\n            return result;\n        });\n    } catch (err) {\n        console.log('fetch failed', err);\n        return \"{error: 'err'}\";\n    }\n}\n","import React from \"react\";\nimport {useForm, UseFormMethods, SubmitHandler} from \"react-hook-form\";\nimport '../apiUtils/WaitForRequests'\nimport {waitForDeleteData, waitForGetData, waitForPostData, waitForPutData} from \"../apiUtils/WaitForRequests\";\n\nconst {Wit, log} = require('node-wit');\n\nconst client = new Wit({\n    accessToken: 'WWEPV7GJEHGK3Y42FCJLFMNWT2GBS4WL',\n    logger: new log.Logger(log.DEBUG) // optional\n});\n\ntype InputProps = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>;\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => (\n    <input ref={ref} {...props} />\n));\n\ntype Option = {\n    label: React.ReactNode;\n    value: string | number | string[];\n};\n\ntype SelectProps = React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>,\n    HTMLSelectElement> & { options: Option[] };\n\nconst Select = React.forwardRef<HTMLSelectElement, SelectProps>(\n    ({options, ...props}, ref) => (\n        <select id={'foo'} ref={ref} {...props}>\n            {options.map(({label, value}) => (\n                <option value={value}>{label}</option>\n            ))}\n        </select>\n    )\n);\n\ntype FormProps<TFormValues> = {\n    onSubmit: SubmitHandler<TFormValues>;\n    children: (methods: UseFormMethods<TFormValues>) => React.ReactNode;\n};\n\nconst Form = <TFormValues extends Record<string, any> = Record<string, any>>({\n                                                                                 onSubmit, children\n                                                                             }: FormProps<TFormValues>) => {\n    const methods = useForm<TFormValues>();\n    return (\n        <form onSubmit={methods.handleSubmit(onSubmit)}>{children(methods)}</form>\n    );\n};\n\ntype FormValues = {\n    firstName: string;\n    lastName: string;\n    choose1: string;\n};\nconst meaning = async (utterance: string) => {\n\n    await client.message(JSON.stringify(utterance), {})\n        .then((response: any) => {\n            var result = JSON.stringify(response.intents);\n\n            if (result === '[]') {\n                result = 'Sorry, I did not understand. Please try again'\n            } else {\n                result = response.intents[0].name;\n            }\n           console.log(result);\n           alert(result);\n        })\n        .catch(console.error);\n\n};\n\nexport default function PersonForm() {\n\n\n    const onSubmit = (data: FormValues) => {\n        //alert(JSON.stringify(data));\n        console.log(data)\n          const demoData = JSON.stringify(data.choose1);\n        console.log({demoData});\n        if (data.choose1 === \"get\") console.log(waitForGetData());\n        if (data.choose1 === \"post\") console.log(waitForPostData(demoData));\n        if (data.choose1 === \"put\") console.log(waitForPutData(demoData));\n        if (data.choose1 === \"delete\") console.log(waitForDeleteData(demoData));\n        if (data.choose1 === \"ask\") console.log(meaning(data.lastName));\n    };\n\n    return (\n        <div>\n            <h1>demo form</h1>\n            <Form<FormValues> onSubmit={onSubmit}>\n                {({errors, register}) => (\n                    <>\n                        <hr/>\n                        <Input  name=\"firstName\" ref={register({\n                            required: 'this is required',\n                            minLength: {\n                                value: 2,\n                                message: 'Min length is 2',\n                            },\n                        })}/>{errors.firstName?.message}\n                        <Input name=\"lastName\" ref={register({\n                            required: 'this is required',\n                            minLength: {\n                                value: 5,\n                                message: 'Min length is 5',\n                            },\n                        })}/>{errors.lastName?.message}\n                        <Select\n                            name=\"choose1\"\n                            ref={register({ minLength: {\n                                    value: 3,\n                                    message: 'Choose Something !',\n                                },})}\n                            options={[\n                                {label: \"\", value: \"\"},\n                                {label: \"Get\", value: 'get'},\n                                {label: \"Post\", value: \"post\"},\n                                {label: \"Put\", value: \"put\"},\n                                {label: \"Delete\", value: \"delete\"},\n                                {label: \"ASK\", value: \"ask\"}\n                            ]}\n                        />{errors.choose1?.message}\n                        <br/>\n                        <Input type=\"submit\"/>\n\n\n                        <hr/>\n                    </>\n                )}\n            </Form>\n        </div>\n    );\n}\n","import React from 'react';\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport PersonForm from \"./PersonForm\";\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nclass Home extends React.Component<RouteComponentProps> {\n\n    render() {\n\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <PersonForm/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Copyright/>\n                    </Grid> </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {RouteComponentProps} from \"react-router-dom\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn(props: RouteComponentProps) {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => {\n                            props.history.push('/home');\n                        }}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","import React from 'react';\nimport {BrowserRouter, Route, RouteComponentProps, Switch} from 'react-router-dom';\n\nimport Home from \"./pages/Home\";\nimport SignIn from \"./pages/Signin\";\n\nconst AppRouter: React.FC = (props ) => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact\n                       path=\"/home\"\n                       render={(props: RouteComponentProps) => (\n                           <Home {...props} />\n                       )}\n                />\n                <Route exact\n                       path=\"/ask\"\n                       render={(props: RouteComponentProps) => (\n                           <Home {...props} />\n                       )}\n                />\n                <Route exact\n                       path=\"/\"\n                       render={(props: RouteComponentProps) => (\n                           <SignIn {...props} />\n                       )}\n                />\n            </Switch>\n            {props.children}\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./AppRouter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AppRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst MyContext = React.createContext('');\n\nReactDOM.render(\n    <MyContext.Provider value={'works'}>\n    <App />\n    </MyContext.Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}